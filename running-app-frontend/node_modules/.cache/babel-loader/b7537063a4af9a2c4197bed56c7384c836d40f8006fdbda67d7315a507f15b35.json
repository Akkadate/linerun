{"ast":null,"code":"var _jsxFileName = \"/var/www/running-app/running-app-frontend2/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useLiff } from '../services/liff';\nimport { authAPI, setAuthToken } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    liffObject,\n    isLoggedIn,\n    profile,\n    login: liffLogin,\n    getIdToken\n  } = useLiff();\n\n  // Initialize user auth state when LIFF is ready\n  useEffect(() => {\n    const initializeAuth = async () => {\n      if (!liffObject) return;\n      try {\n        if (isLoggedIn && profile) {\n          const idToken = getIdToken();\n          if (idToken) {\n            // Login to backend with LINE ID token\n            await handleLogin(idToken);\n          }\n        }\n      } catch (error) {\n        console.error('Authentication error:', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, [liffObject, isLoggedIn, profile, getIdToken]);\n\n  // Handle login with LINE\n  const handleLogin = async idToken => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Send ID token to backend\n      const {\n        user,\n        token\n      } = await authAPI.login(idToken);\n\n      // Set token for API calls\n      setAuthToken(token);\n\n      // Save user data\n      setCurrentUser(user);\n\n      // Store token in local storage\n      localStorage.setItem('token', token);\n      return user;\n    } catch (error) {\n      console.error('Login failed:', error);\n      setError(error.message || 'การเข้าสู่ระบบล้มเหลว');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login with LINE\n  const login = async () => {\n    liffLogin();\n  };\n\n  // Register new user\n  const register = async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        user,\n        token\n      } = await authAPI.register(userData);\n\n      // Set token for API calls\n      setAuthToken(token);\n\n      // Save user data\n      setCurrentUser(user);\n\n      // Store token in local storage\n      localStorage.setItem('token', token);\n      return user;\n    } catch (error) {\n      console.error('Registration failed:', error);\n      setError(error.message || 'การลงทะเบียนล้มเหลว');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    setCurrentUser(null);\n    setAuthToken(null);\n    localStorage.removeItem('token');\n\n    // If in LIFF browser, we don't want to log out from LINE\n    if (liffObject && !liffObject.isInClient()) {\n      liffObject.logout();\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async profileData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const updatedUser = await authAPI.updateUserProfile(profileData);\n      setCurrentUser(updatedUser);\n      return updatedUser;\n    } catch (error) {\n      console.error('Profile update failed:', error);\n      setError(error.message || 'การอัปเดตโปรไฟล์ล้มเหลว');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if token exists on app load\n  useEffect(() => {\n    const loadUserFromToken = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          setAuthToken(token);\n          const user = await authAPI.getUserProfile();\n          setCurrentUser(user);\n        } catch (error) {\n          console.error('Token invalid:', error);\n          localStorage.removeItem('token');\n          setAuthToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    loadUserFromToken();\n  }, []);\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Pdpudpexw/gYdl3ts6HQo7NqAwE=\", false, function () {\n  return [useLiff];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useLiff","authAPI","setAuthToken","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","liffObject","isLoggedIn","profile","login","liffLogin","getIdToken","initializeAuth","idToken","handleLogin","console","user","token","localStorage","setItem","message","register","userData","logout","removeItem","isInClient","updateProfile","profileData","updatedUser","updateUserProfile","loadUserFromToken","getItem","getUserProfile","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/running-app/running-app-frontend2/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useLiff } from '../services/liff';\nimport { authAPI, setAuthToken } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { liffObject, isLoggedIn, profile, login: liffLogin, getIdToken } = useLiff();\n\n  // Initialize user auth state when LIFF is ready\n  useEffect(() => {\n    const initializeAuth = async () => {\n      if (!liffObject) return;\n      \n      try {\n        if (isLoggedIn && profile) {\n          const idToken = getIdToken();\n          if (idToken) {\n            // Login to backend with LINE ID token\n            await handleLogin(idToken);\n          }\n        }\n      } catch (error) {\n        console.error('Authentication error:', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, [liffObject, isLoggedIn, profile, getIdToken]);\n\n  // Handle login with LINE\n  const handleLogin = async (idToken) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Send ID token to backend\n      const { user, token } = await authAPI.login(idToken);\n      \n      // Set token for API calls\n      setAuthToken(token);\n      \n      // Save user data\n      setCurrentUser(user);\n      \n      // Store token in local storage\n      localStorage.setItem('token', token);\n      \n      return user;\n    } catch (error) {\n      console.error('Login failed:', error);\n      setError(error.message || 'การเข้าสู่ระบบล้มเหลว');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login with LINE\n  const login = async () => {\n    liffLogin();\n  };\n\n  // Register new user\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { user, token } = await authAPI.register(userData);\n      \n      // Set token for API calls\n      setAuthToken(token);\n      \n      // Save user data\n      setCurrentUser(user);\n      \n      // Store token in local storage\n      localStorage.setItem('token', token);\n      \n      return user;\n    } catch (error) {\n      console.error('Registration failed:', error);\n      setError(error.message || 'การลงทะเบียนล้มเหลว');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    setCurrentUser(null);\n    setAuthToken(null);\n    localStorage.removeItem('token');\n    \n    // If in LIFF browser, we don't want to log out from LINE\n    if (liffObject && !liffObject.isInClient()) {\n      liffObject.logout();\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async (profileData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const updatedUser = await authAPI.updateUserProfile(profileData);\n      setCurrentUser(updatedUser);\n      \n      return updatedUser;\n    } catch (error) {\n      console.error('Profile update failed:', error);\n      setError(error.message || 'การอัปเดตโปรไฟล์ล้มเหลว');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if token exists on app load\n  useEffect(() => {\n    const loadUserFromToken = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          setAuthToken(token);\n          const user = await authAPI.getUserProfile();\n          setCurrentUser(user);\n        } catch (error) {\n          console.error('Token invalid:', error);\n          localStorage.removeItem('token');\n          setAuthToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    \n    loadUserFromToken();\n  }, []);\n\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!currentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}